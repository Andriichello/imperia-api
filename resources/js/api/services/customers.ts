/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * imperia-api
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  DestroyCustomerResponse,
  DestroyRequest,
  IndexCustomerResponse,
  IndexCustomersParams,
  RestoreCustomerResponse,
  ShowCustomerParams,
  ShowCustomerResponse,
  StoreCustomerRequest,
  StoreCustomerResponse,
  UpdateCustomerRequest,
  UpdateCustomerResponse,
} from "../models";

/**
 * @summary Index customers.
 */
export const indexCustomers = <TData = AxiosResponse<IndexCustomerResponse>>(
  params?: IndexCustomersParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/customers`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Store customer.
 */
export const storeCustomer = <TData = AxiosResponse<StoreCustomerResponse>>(
  storeCustomerRequest: StoreCustomerRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/customers`, storeCustomerRequest, options);
};
/**
 * @summary Show customer by id.
 */
export const showCustomer = <TData = AxiosResponse<ShowCustomerResponse>>(
  id: number,
  params?: ShowCustomerParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/customers/${id}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Delete customer.
 */
export const destroyCustomer = <TData = AxiosResponse<DestroyCustomerResponse>>(
  id: number,
  destroyRequest?: DestroyRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.delete(`/api/customers/${id}`, {
    data: destroyRequest,
    ...options,
  });
};
/**
 * @summary Update customer.
 */
export const updateCustomer = <TData = AxiosResponse<UpdateCustomerResponse>>(
  id: number,
  updateCustomerRequest: UpdateCustomerRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.patch(`/api/customers/${id}`, updateCustomerRequest, options);
};
/**
 * @summary Restore customer.
 */
export const restoreCustomer = <TData = AxiosResponse<RestoreCustomerResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/customers/${id}/restore`, undefined, options);
};
export type IndexCustomersResult = AxiosResponse<IndexCustomerResponse>;
export type StoreCustomerResult = AxiosResponse<StoreCustomerResponse>;
export type ShowCustomerResult = AxiosResponse<ShowCustomerResponse>;
export type DestroyCustomerResult = AxiosResponse<DestroyCustomerResponse>;
export type UpdateCustomerResult = AxiosResponse<UpdateCustomerResponse>;
export type RestoreCustomerResult = AxiosResponse<RestoreCustomerResponse>;
