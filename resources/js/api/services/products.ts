/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * imperia-api
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  DestroyProductResponse,
  DestroyRequest,
  IndexProductResponse,
  IndexProductsParams,
  RestoreProductResponse,
  ShowProductParams,
  ShowProductResponse,
  StoreProductRequest,
  StoreProductResponse,
  UpdateProductRequest,
  UpdateProductResponse,
} from "../models";

/**
 * @summary Index products.
 */
export const indexProducts = <TData = AxiosResponse<IndexProductResponse>>(
  params?: IndexProductsParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/products`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Store product.
 */
export const storeProduct = <TData = AxiosResponse<StoreProductResponse>>(
  storeProductRequest: StoreProductRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/products`, storeProductRequest, options);
};
/**
 * @summary Show product by id.
 */
export const showProduct = <TData = AxiosResponse<ShowProductResponse>>(
  id: number,
  params?: ShowProductParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/products/${id}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Delete product.
 */
export const destroyProduct = <TData = AxiosResponse<DestroyProductResponse>>(
  id: number,
  destroyRequest?: DestroyRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.delete(`/api/products/${id}`, {
    data: destroyRequest,
    ...options,
  });
};
/**
 * @summary Update product.
 */
export const updateProduct = <TData = AxiosResponse<UpdateProductResponse>>(
  id: number,
  updateProductRequest: UpdateProductRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.patch(`/api/products/${id}`, updateProductRequest, options);
};
/**
 * @summary Restore product.
 */
export const restoreProduct = <TData = AxiosResponse<RestoreProductResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/products/${id}/restore`, undefined, options);
};
export type IndexProductsResult = AxiosResponse<IndexProductResponse>;
export type StoreProductResult = AxiosResponse<StoreProductResponse>;
export type ShowProductResult = AxiosResponse<ShowProductResponse>;
export type DestroyProductResult = AxiosResponse<DestroyProductResponse>;
export type UpdateProductResult = AxiosResponse<UpdateProductResponse>;
export type RestoreProductResult = AxiosResponse<RestoreProductResponse>;
