/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * imperia-api
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  DestroyDishResponse,
  DestroyRequest,
  IndexDishResponse,
  IndexDishesParams,
  RestoreDishResponse,
  ShowDishParams,
  ShowDishResponse,
  StoreDishRequest,
  StoreDishResponse,
  UpdateDishRequest,
  UpdateDishResponse,
} from "../models";

/**
 * @summary Index dishes.
 */
export const indexDishes = <TData = AxiosResponse<IndexDishResponse>>(
  params?: IndexDishesParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/dishes`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Store dish.
 */
export const storeDish = <TData = AxiosResponse<StoreDishResponse>>(
  storeDishRequest: StoreDishRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/dishes`, storeDishRequest, options);
};
/**
 * @summary Show dish by id.
 */
export const showDish = <TData = AxiosResponse<ShowDishResponse>>(
  id: number,
  params?: ShowDishParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/dishes/${id}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Delete dish.
 */
export const destroyDish = <TData = AxiosResponse<DestroyDishResponse>>(
  id: number,
  destroyRequest?: DestroyRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.delete(`/api/dishes/${id}`, {
    data: destroyRequest,
    ...options,
  });
};
/**
 * @summary Update dish.
 */
export const updateDish = <TData = AxiosResponse<UpdateDishResponse>>(
  id: number,
  updateDishRequest: UpdateDishRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.patch(`/api/dishes/${id}`, updateDishRequest, options);
};
/**
 * @summary Restore dish.
 */
export const restoreDish = <TData = AxiosResponse<RestoreDishResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/dishes/${id}/restore`, undefined, options);
};
export type IndexDishesResult = AxiosResponse<IndexDishResponse>;
export type StoreDishResult = AxiosResponse<StoreDishResponse>;
export type ShowDishResult = AxiosResponse<ShowDishResponse>;
export type DestroyDishResult = AxiosResponse<DestroyDishResponse>;
export type UpdateDishResult = AxiosResponse<UpdateDishResponse>;
export type RestoreDishResult = AxiosResponse<RestoreDishResponse>;
