/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * imperia-api
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  BanquetInvoiceUrlRequest,
  BanquetInvoiceUrlResponse,
  BanquetMultipleInvoiceUrlResponse,
  MultipleInvoiceUrlRequest,
  OrderInvoiceUrlRequest,
  OrderInvoiceUrlResponse,
  OrderMultipleInvoiceUrlResponse,
} from "../models";

/**
 * @summary Generate url for accessing order's invoice.
 */
export const orderInvoiceUrl = <TData = AxiosResponse<OrderInvoiceUrlResponse>>(
  id: number,
  orderInvoiceUrlRequest: OrderInvoiceUrlRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/orders/${id}/invoice/url`,
    orderInvoiceUrlRequest,
    options,
  );
};
/**
 * @summary Generate url for accessing invoice for multiple orders.
 */
export const orderMultipleInvoiceUrl = <
  TData = AxiosResponse<OrderMultipleInvoiceUrlResponse>,
>(
  multipleInvoiceUrlRequest: MultipleInvoiceUrlRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/orders/invoice/url`,
    multipleInvoiceUrlRequest,
    options,
  );
};
/**
 * @summary Generate url for accessing banquet's invoice.
 */
export const banquetInvoiceUrl = <
  TData = AxiosResponse<BanquetInvoiceUrlResponse>,
>(
  id: number,
  banquetInvoiceUrlRequest: BanquetInvoiceUrlRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/banquets/${id}/invoice/url`,
    banquetInvoiceUrlRequest,
    options,
  );
};
/**
 * @summary Generate url for accessing invoice for multiple banquets.
 */
export const banquetMultipleInvoiceUrl = <
  TData = AxiosResponse<BanquetMultipleInvoiceUrlResponse>,
>(
  multipleInvoiceUrlRequest: MultipleInvoiceUrlRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/banquets/invoice/url`,
    multipleInvoiceUrlRequest,
    options,
  );
};
export type OrderInvoiceUrlResult = AxiosResponse<OrderInvoiceUrlResponse>;
export type OrderMultipleInvoiceUrlResult =
  AxiosResponse<OrderMultipleInvoiceUrlResponse>;
export type BanquetInvoiceUrlResult = AxiosResponse<BanquetInvoiceUrlResponse>;
export type BanquetMultipleInvoiceUrlResult =
  AxiosResponse<BanquetMultipleInvoiceUrlResponse>;
