/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * imperia-api
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  DestroyBanquetResponse,
  DestroyRequest,
  IndexBanquetResponse,
  IndexBanquetsParams,
  RestoreBanquetResponse,
  ShowBanquetParams,
  ShowBanquetResponse,
  ShowOrderByBanquetIdParams,
  ShowOrderResponse,
  StoreBanquetParams,
  StoreBanquetRequest,
  StoreBanquetResponse,
  UpdateBanquetParams,
  UpdateBanquetRequest,
  UpdateBanquetResponse,
} from "../models";

/**
 * @summary Index banquets.
 */
export const indexBanquets = <TData = AxiosResponse<IndexBanquetResponse>>(
  params?: IndexBanquetsParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/banquets`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Store banquet. Order record will automatically be created.
 */
export const storeBanquet = <TData = AxiosResponse<StoreBanquetResponse>>(
  storeBanquetRequest: StoreBanquetRequest,
  params?: StoreBanquetParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/banquets`, storeBanquetRequest, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Show banquets by id.
 */
export const showBanquet = <TData = AxiosResponse<ShowBanquetResponse>>(
  id: number,
  params?: ShowBanquetParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/banquets/${id}`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Delete banquet.
 */
export const destroyBanquet = <TData = AxiosResponse<DestroyBanquetResponse>>(
  id: number,
  destroyRequest?: DestroyRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.delete(`/api/banquets/${id}`, {
    data: destroyRequest,
    ...options,
  });
};
/**
 * @summary Update banquet.
 */
export const updateBanquet = <TData = AxiosResponse<UpdateBanquetResponse>>(
  id: number,
  updateBanquetRequest: UpdateBanquetRequest,
  params?: UpdateBanquetParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.patch(`/api/banquets/${id}`, updateBanquetRequest, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * @summary Restore banquet.
 */
export const restoreBanquet = <TData = AxiosResponse<RestoreBanquetResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/banquets/${id}/restore`, undefined, options);
};
/**
 * @summary Show order by banquet id.
 */
export const showOrderByBanquetId = <TData = AxiosResponse<ShowOrderResponse>>(
  id: number,
  params?: ShowOrderByBanquetIdParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/banquets/${id}/order`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
export type IndexBanquetsResult = AxiosResponse<IndexBanquetResponse>;
export type StoreBanquetResult = AxiosResponse<StoreBanquetResponse>;
export type ShowBanquetResult = AxiosResponse<ShowBanquetResponse>;
export type DestroyBanquetResult = AxiosResponse<DestroyBanquetResponse>;
export type UpdateBanquetResult = AxiosResponse<UpdateBanquetResponse>;
export type RestoreBanquetResult = AxiosResponse<RestoreBanquetResponse>;
export type ShowOrderByBanquetIdResult = AxiosResponse<ShowOrderResponse>;
